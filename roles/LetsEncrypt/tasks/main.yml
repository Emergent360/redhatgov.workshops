# file: roles/LetsEncrypt/tasks/main.yml
---

- name: "HTTP-01 Challenge Not Completely Implemented"
  fail:
  when: acme_challenge_type == 'http-01'

- name: "Create required directories in {{ letsencrypt_dir }}"
  file:
    path: "{{ letsencrypt_dir }}/{{ item }}"
    state: directory
    mode: "0700"
  with_items:
  - account
  - certs
  - csrs
  - keys

- name: "Generate a Let's Encrypt account key"
  shell: "openssl genrsa 4096 | tee {{ letsencrypt_account_key }}"
  args:
    creates: "{{ letsencrypt_account_key }}"

- name: "Generate Let's Encrypt private key"
  shell: "openssl genrsa 4096 | tee {{ letsencrypt_keys_dir }}/{{ domain_name }}.key"
  args:
    creates: "{{ letsencrypt_keys_dir }}/{{ domain_name }}.key"

- name: "Generate Let's Encrypt CSR"
  community.crypto.openssl_csr:
    privatekey_path: "{{ letsencrypt_keys_dir }}/{{ domain_name }}.key"
    common_name: "{{ workshop_prefix }}.node.0.{{ domain_name }}"
    subject_alt_name: "{{ groups['rhel_nodes'] | map('regex_replace', '^', 'DNS:') }}"
    path: "{{ letsencrypt_csrs_dir }}/{{ domain_name }}.csr"

- name: "CSR data"
  debug:
    msg:
    - "account_key_src: {{ letsencrypt_account_key }}"
    - "account_email: {{ acme_email }}"
    - "acme_directory: {{ acme_directory }}"
    - "acme_version: {{ acme_version }}"
    - "terms_agreed: yes"
    - "challenge: {{ acme_challenge_type }}"
    - "csr: {{ letsencrypt_csrs_dir }}/{{ domain_name }}.csr"
    - "dest: {{ letsencrypt_certs_dir }}/{{ domain_name }}.crt"
    - "fullchain_dest: {{ letsencrypt_certs_dir }}/fullchain_{{ domain_name }}.crt"
    - "remaining_days: {{ letsencrypt_days }}"

- name: "Begin Let's Encrypt challenges"
  community.crypto.acme_certificate:
    account_key_src: "{{ letsencrypt_account_key }}"
    account_email: "{{ acme_email }}"
    acme_directory: "{{ acme_directory }}"
    acme_version: "{{ acme_version }}"
    terms_agreed: "yes"
    challenge: "{{ acme_challenge_type }}"
    csr: "{{ letsencrypt_csrs_dir }}/{{ domain_name }}.csr"
    dest: "{{ letsencrypt_certs_dir }}/{{ domain_name }}.crt"
    fullchain_dest: "{{ letsencrypt_certs_dir }}/fullchain_{{ domain_name }}.crt"
    remaining_days: 91
  register: acme_challenge_your_domain

- name: "Challenge data"
  debug:
    var: acme_challenge_your_domain

- name: "Create .well-known/acme-challenge directory"
  file:
    path: /var/www/html/.well-known/acme-challenge
    state: directory
    owner: root
    group: root
    mode: "0755"
  when: acme_challenge_type == 'http-01'

- name: "Implement http-01 challenge files"
  copy:
    content: "{{ acme_challenge_your_domain['challenge_data'][item]['http-01']['resource_value'] }}"
    dest: "/var/www/html/{{ acme_challenge_your_domain['challenge_data'][item]['http-01']['resource'] }}"
    owner: root
    group: root
    mode: "0644"
  with_items:
  - "{{ domain_name }}"
  - "www.{{ domain_name }}"
  when: acme_challenge_type == 'http-01'

- name: Create DNS records for LE Challenge
  route53:
    zone: "{{ domain_name }}"
    type: "TXT"
    ttl: "300"
    overwrite: yes
    record: "{{ item.value['dns-01']['record'] }}"
    value: "\"{{ item.value['dns-01']['resource_value'] }}\""
    wait: yes
    state: present
  loop: "{{ acme_challenge_your_domain['challenge_data'] | dict2items }}"
  become: false
  when: acme_challenge_type == 'dns-01'

- name: "Complete Let's Encrypt challenges"
  community.crypto.acme_certificate:
    acme_directory: "{{ acme_directory }}"
    acme_version: "{{ acme_version }}"
    account_key_src: "{{ letsencrypt_account_key }}"
    account_email: "{{ acme_email }}"
    challenge: "{{ acme_challenge_type }}"
    csr: "{{ letsencrypt_csrs_dir }}/{{ domain_name }}.csr"
    dest: "{{ letsencrypt_certs_dir }}/{{ domain_name }}.crt"
    chain_dest: "{{ letsencrypt_certs_dir }}/chain_{{ domain_name }}.crt"
    fullchain_dest: "{{ letsencrypt_certs_dir }}/fullchain_{{ domain_name }}"
    data: "{{ acme_challenge_your_domain }}"

...
